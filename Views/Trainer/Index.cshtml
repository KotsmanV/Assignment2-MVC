@model PagedList.IPagedList<Assignment2.Models.Trainer>


@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Trainer", FormMethod.Get))
{
    <div class="form-group">
        <label for="selectOption">Filtering Option:</label>
        <select id="selectOption" name="selectOption" class="form-control">
            <option value="FirstName">First Name</option>
            <option value="LastName">Last Name</option>
            <option value="DateHired">Date Hired</option>
            <option value="Salary">Salary</option>
            <option value="Specialization">Specialization</option>
            <option value="Availability">Availability</option>
        </select>

        @Html.Label("Search Text:")
        @Html.TextBox("searchText", null, new { id = "searchBox", type = "search", @class = "form-control", placeholder = "Search", autocomplete = "off" })


        <input id="searchButton" type="submit" value="Search for Trainer" class="btn btn-success" />
        <input id="resetButton" type="button" name="Clear Form" value="View All" class="btn btn-warning" />
    </div>


}

@*<div id="searchResults">
    <label for="result"><strong>Search results for</strong></label>
    <text id="result"></text>
</div>*@


<table class="table table-hover">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", "Trainer", new { sortOrder = ViewBag.ByLastName }, null)
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", "Trainer", new { sortOrder = ViewBag.ByFirstName }, null)
        </th>
        <th>
            @Html.ActionLink("Salary", "Index", "Trainer", new { sortOrder = ViewBag.BySalary }, null)
        </th>
        <th>
            @Html.ActionLink("Date Hired", "Index", "Trainer", new { sortOrder = ViewBag.ByDateHired }, null)
        </th>
        <th>

            @Html.ActionLink("Specializations", "Index", "Trainer", new { sortOrder = ViewBag.BySpecializationCount }, null)
        </th>
        <th>
            @Html.ActionLink("Availability", "Index", "Trainer", new { sortOrder = ViewBag.ByAvailability }, null)
        </th>
        <th>
            Actions
        </th>
    </tr>

    @foreach (var trainer in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => trainer.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => trainer.FirstName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => trainer.Salary)
            </td>
            <td>
                @trainer.DateHired.ToString("d")
            </td>
            <td>
                <ul>
                    @foreach (var spec in trainer.Specializations.OrderBy(x => x.SpecializationType))
                    {
                        <li>@spec.SpecializationType</li>
                    }
                </ul>

            </td>
            <td>
                @Html.DisplayFor(modelItem => trainer.IsAvailable)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = trainer.TrainerId }) |
                @Html.ActionLink("Details", "Details", new { id = trainer.TrainerId }) |
                @Html.ActionLink("Delete", "Delete", new { id = trainer.TrainerId })
            </td>
        </tr>
    }
</table>

Page @(Model.PageCount <Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, x => Url.Action("Index", "Trainer", new { page = x }))


@section ViewAllButtonJS{
    <script>
        $("#resetButton").click(function (e) {
            window.location.href='@Url.Action("Index", "Trainer")';
        });
    </script>
}

@section SearchInputChangeJS{
    <script>
        $("#selectOption").on('change', (function () {
            var option = $("#selectOption").val();
            var searchBox = $("#searchBox");
            if (option == 'DateHired') {
                searchBox.attr('type', 'date');
            }
            else if (option == 'Availability') {
                searchBox.replaceWith(
                    `
                                <label for="searchText">Availability</label>
                                <select id="searchText" name="searchText" class="form-control">
                                <option value="true">Yes</option>
                                <option value="false">No</option>
                            `);
            }
            else {
                searchBox.attr('type', 'search')
            }
        }));
    </script>
}

@section ResetSearchOnRefreshJS{
    <script>
        $(window).on('load', function () {
            $("#searchBox").val("");
        });
    </script>
}

@*@section GetSearchButtonData{
    <script>
        $("#searchButton").click(function () {
            var selectOption = $("#selectOption").val();
            var searchText = $("#searchBox").val();
            console.log(selectOption);
            console.log(searchText);
            $("#searchResults").html(
                `
                <label for="result"><strong>Search results for</strong></label>
                <text id="result"><strong>${selectOption}</strong><i>${searchText}</i></text>
                `
            );
        });
    </script>
    }*@



