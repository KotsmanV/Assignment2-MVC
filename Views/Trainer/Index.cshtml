@model PagedList.IPagedList<Assignment2.Models.Trainer>


@using PagedList;
@using PagedList.Mvc;


@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm("Index", "Trainer", FormMethod.Get))
{
    @Html.Label("Search Text:")
    @Html.TextBox("searchText", null, new { type = "search", @class = "form-control", placeholder = "Search", autocomplete = "off" })

    <div class="form-group">
        <label for="selectOption">Filtering Option:</label>
        <select id="selectOption" name="selectOption" class="form-control">
            <option value="FirstName">First Name</option>
            <option value="LastName">Last Name</option>
            <option value="DateHired">Date Hired</option>
            <option value="Salary">Salary</option>
            <option value="Specialization">Specialization</option>
        </select>
        <br />
        <input type="submit" value="Search for Trainer" class="btn btn-primary" />
        <input id="resetButton" type="button" name="Clear Form" value="Clear Form" class="btn btn-danger" />
    </div>
}

<table class="table table-hover">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", "Trainer", new { sortOrder = ViewBag.ByLastName }, null)
            @*@Html.DisplayNameFor(model => model.LastName)*@
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", "Trainer", new { sortOrder = ViewBag.ByFirstName }, null)
            @* @Html.DisplayNameFor(model => model.FirstName)*@
        </th>
        <th>
            @Html.ActionLink("Salary", "Index", "Trainer", new { sortOrder = ViewBag.BySalary }, null)
            @*@Html.DisplayNameFor(model => model.Salary)*@
        </th>
        <th>
            @Html.ActionLink("Date Hired", "Index", "Trainer", new { sortOrder = ViewBag.ByDateHired }, null)
            @*@Html.DisplayNameFor(model => model.DateHired)*@
        </th>
        <th>
            Specializations
            @*@Html.DisplayNameFor(model => model.Specializations)*@
        </th>
        <th>
            @Html.ActionLink("Availability", "Index", "Trainer", new { sortOrder = ViewBag.ByAvailability }, null)
            @*@Html.DisplayNameFor(model => model.IsAvailable)*@
        </th>
        <th>
            Actions
        </th>
    </tr>

    @foreach (var trainer in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => trainer.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => trainer.FirstName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => trainer.Salary)
            </td>
            <td>
                @trainer.DateHired.ToString("d")
            </td>
            <td>
                <ul>
                    @foreach (var spec in trainer.Specializations.OrderBy(x=>x.SpecializationType))
                    {
                        <li>@spec.SpecializationType</li>
                    }
                </ul>

            </td>
            <td>
                @Html.DisplayFor(modelItem => trainer.IsAvailable)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = trainer.TrainerId }) |
                @Html.ActionLink("Details", "Details", new { id = trainer.TrainerId }) |
                @Html.ActionLink("Delete", "Delete", new { id = trainer.TrainerId })
            </td>
        </tr>
    }
</table>

Page @(Model.PageCount <Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, x => Url.Action("Index", "Trainer", new { page = x }))


@section ResetSearchJS{
    <script>
        $("#resetButton").click(function (e) {
            $("#searchFirstName").val("");
            $("#searchLastName").val("");
            $("#searchSalary").val("");
            $("#searchDateHired").val("");
            window.location.href='@Url.Action("Index", "Trainer")';
        });
    </script>

}

